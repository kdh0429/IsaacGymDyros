# used to create the object
name: TocabiAMPLower

physics_engine: ${..physics_engine}

# if given, will override the device setting in gym.
env: 
  numEnvs: ${resolve_default:4096,${...num_envs}}
  envSpacing: 5
  episodeLength: 32
  cameraFollow: True # if the camera follows humanoid or not
  enableDebugVis: False
  
  pdControl: False
  powerScale: 1.0
  controlFrequencyInv: 16 # rui 1000Hz -> 4 -> 250Hz 8 -> 125Hz 16 -> 62.5Hz
  stateInit: "Random"
  hybridInitProb: 0.5
  # amp observation settings
  numAMPObsSteps: 2

  localRootObs: False
  contactBodies: ["L_Foot_Link", "R_Foot_Link"]
  terminationHeight: 0.6
  enableEarlyTermination: True

  perturbation: True
  velChange: True

  NumHis: 10
  NumSkip: 2

  command:
    x: [-0.0, 1.0]
    y: [-0.0, 0.0] # -: right, +: left
    yaw: [-0.0, 0.0] # -pi/6 to pi/6


  # animation files to learn from
  motion_file: "tocabi_motions.yaml"

  asset:
    # assetFileName: "mjcf/dyros_tocabi_simplified.xml"
    assetFileName: "mjcf/dyros_tocabi/xml/dyros_tocabi.xml"

  terrain:
      terrainType: plane # none, plane, or trimesh
      staticFriction: 1.0  # [-]
      dynamicFriction: 1.0  # [-]
      restitution: 0.        # [-]
      # rough terrain only:
      curriculum: True
      maxInitMapLevel: 0
      mapLength: 8.
      mapWidth: 8.
      numLevels: 10
      numTerrains: 20
      # terrain types: [smooth slope, rough slope, stairs up, stairs down, discrete]
      terrainProportions: [0.4, 0.4, 0.2, 0.0, 0.0]
      # tri mesh only:
      slopeTreshold: 0.5

sim:
  dt: 0.001
  # dt: 0.0005
  substeps: 1
  up_axis: "z"
  use_gpu_pipeline: ${eq:${...pipeline},"gpu"}
  gravity: [0.0, 0.0, -9.81]
  physx:
    num_threads: ${....num_threads}
    solver_type: ${....solver_type}
    num_position_iterations: 4
    use_gpu: ${contains:"cuda",${....sim_device}} # set to False to run on CPU
    num_velocity_iterations: 0
    contact_offset: 0.002 #0.02 #0.002
    rest_offset: 0.0
    bounce_threshold_velocity: 0.04 #0.2 #0.04
    max_depenetration_velocity: 10.0
    default_buffer_size_multiplier: 5.0
    max_gpu_contact_pairs: 16777216 #16*1024*1024 8388608 # 8*1024*1024
    num_subscenes: ${....num_subscenes}
    contact_collection: 1 # 0: CC_NEVER (don't collect contact info), 1: CC_LAST_SUBSTEP (collect only contacts on last substep), 2: CC_ALL_SUBSTEPS (broken - do not use!)

task:
  noise: True
  randomize: True
  randomization_params:
    # specify which attributes to randomize for each actor type and property
    frequency: 1   # Define how many environment steps between generating new randomizations
    actor_params:
      humanoid:
        # color: True
        rigid_body_properties:
          mass: 
            range: [0.8, 1.2]
            operation: "scaling"
            distribution: "uniform"
            setup_only: True # Property will only be randomized once before simulation is started. See Domain Randomization Documentation for more info.
            schedule: "constant"  # "linear" will linearly interpolate between no rand and max rand
            schedule_steps: 0
        dof_properties:
          damping: 
            range: [0.0,2.9]
            operation: "additive"
            distribution: "uniform"
            schedule: "constant"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 0
          armature:
            range: [0.8, 1.2]
            operation: "scaling"
            distribution: "uniform"
            schedule: "constant"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 0

